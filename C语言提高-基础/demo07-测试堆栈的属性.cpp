/*
 * 测试堆栈生长方向

     栈的开口方向向下，生长方向向下

	 ----------
	 |   a     |  4390036     
	 ----------
	 |   b     |  4390024
	 ----------
	 ----------
	 |   c     |  4390012
	 ----------
	 | arr[0]  |  4389984
	 | arr[1]  |  4389988
	 | arr[2]  |
	 | arr[3]  |
	 | arr[4]  |
	 ----------|
	 |         |
	 |   /\    |
	     ||
     
	 ==============================================================================
         
	 堆的开口方向向上，生长方向向上

	     ||
	 |   \/    |
	 |         |
	 |---------|
	 |         |  
	 |         |  
	 |         |  
	 |         |
	 |         |
	 ----------|
	 |   p+2   |  8696336
	 ----------
	 |   p+1   |  8696332
	 ----------
	 |   p     |  8696328
	 ----------
	 

 * @author:robbin.zhang
 * @date:2018/01/24 23:40
 */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>‘

int main_07(void)
{   
	int a = 1;
	int b = 2;
	int c = 3;
	printf("&a:%d\n&b:%d\n&c:%d\n", &a, &b, &c);
    
	int arr[5] = { 1, 2, 3, 4, 5 };
	printf("&a[0]:%d\n", &arr[0]);
	printf("&a[1]:%d\n", &arr[1]);

   /*
	&a : 4390036
	&b : 4390024
	&c : 4390012
	&a[0] : 4389984
	&a[1] : 4389988
	*/

	int * p2 = (int *)malloc(5 * sizeof(int));
	int i = 1;
	for (int *p = p2; p < p2 + 5; p++)
	{
		*p = i++;
	}
	printf("0:%d\n1:%d\n2:%d\n", p2, p2 + 1, p2 + 2);

	/*
	 0 : 8696328
	 1 : 8696332
	 2 : 8696336
	*/
	system("pause");
	return 0;
}

